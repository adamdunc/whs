# 
# Synthesis run script generated by Vivado
# 

set TIME_start [clock seconds] 
namespace eval ::optrace {
  variable script "/home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.runs/synth_1/display_top.tcl"
  variable category "vivado_synth"
}

# Try to connect to running dispatch if we haven't done so already.
# This code assumes that the Tcl interpreter is not using threads,
# since the ::dispatch::connected variable isn't mutex protected.
if {![info exists ::dispatch::connected]} {
  namespace eval ::dispatch {
    variable connected false
    if {[llength [array get env XILINX_CD_CONNECT_ID]] > 0} {
      set result "true"
      if {[catch {
        if {[lsearch -exact [package names] DispatchTcl] < 0} {
          set result [load librdi_cd_clienttcl[info sharedlibextension]] 
        }
        if {$result eq "false"} {
          puts "WARNING: Could not load dispatch client library"
        }
        set connect_id [ ::dispatch::init_client -mode EXISTING_SERVER ]
        if { $connect_id eq "" } {
          puts "WARNING: Could not initialize dispatch client"
        } else {
          puts "INFO: Dispatch client connection id - $connect_id"
          set connected true
        }
      } catch_res]} {
        puts "WARNING: failed to connect to dispatch server - $catch_res"
      }
    }
  }
}
if {$::dispatch::connected} {
  # Remove the dummy proc if it exists.
  if { [expr {[llength [info procs ::OPTRACE]] > 0}] } {
    rename ::OPTRACE ""
  }
  proc ::OPTRACE { task action {tags {} } } {
    ::vitis_log::op_trace "$task" $action -tags $tags -script $::optrace::script -category $::optrace::category
  }
  # dispatch is generic. We specifically want to attach logging.
  ::vitis_log::connect_client
} else {
  # Add dummy proc if it doesn't exist.
  if { [expr {[llength [info procs ::OPTRACE]] == 0}] } {
    proc ::OPTRACE {{arg1 \"\" } {arg2 \"\"} {arg3 \"\" } {arg4 \"\"} {arg5 \"\" } {arg6 \"\"}} {
        # Do nothing
    }
  }
}

proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
OPTRACE "synth_1" START { ROLLUP_AUTO }
set_param chipscope.maxJobs 1
OPTRACE "Creating in-memory project" START { }
create_project -in_memory -part xc7a35ticpg236-1L

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_property webtalk.parent_dir /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.cache/wt [current_project]
set_property parent.project_path /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.xpr [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language Verilog [current_project]
set_property ip_output_repo /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.cache/ip [current_project]
set_property ip_cache_permissions {read write} [current_project]
OPTRACE "Creating in-memory project" END { }
OPTRACE "Adding files" START { }
read_verilog -library xil_defaultlib {
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/background_ghost_rom.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/binary2bcd.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/blocks_rom.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/eggs.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/eggs_rom.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/enemy_collision.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/game_logo_display.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/game_logo_rom.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/game_state_machine.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/gameover_display.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/gameover_rom.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/ghost_bottom.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/ghost_crazy.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/ghost_crazy_rom.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/ghost_normal_rom.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/ghost_top.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/grounded.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/hearts_display.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/hearts_rom.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/nes_controller.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/numbers_rom.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/platforms.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/score_display.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/vga_sync.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/walls_rom.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/yoshi_ghost_rom.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/yoshi_rom.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/yoshi_sprite.v
  /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/sources_1/imports/P0_nightmare/display_top.v
}
OPTRACE "Adding files" END { }
# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}
read_xdc /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/constrs_1/imports/P0_nightmare/basys3.xdc
set_property used_in_implementation false [get_files /home/adamdunc/repos/whs/Vivado_P0_nightmare/Vivado_P0_nightmare.srcs/constrs_1/imports/P0_nightmare/basys3.xdc]

set_param ips.enableIPCacheLiteLoad 1
close [open __synthesis_is_running__ w]

OPTRACE "synth_design" START { }
synth_design -top display_top -part xc7a35ticpg236-1L
OPTRACE "synth_design" END { }


OPTRACE "write_checkpoint" START { CHECKPOINT }
# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef display_top.dcp
OPTRACE "write_checkpoint" END { }
OPTRACE "synth reports" START { REPORT }
create_report "synth_1_synth_report_utilization_0" "report_utilization -file display_top_utilization_synth.rpt -pb display_top_utilization_synth.pb"
OPTRACE "synth reports" END { }
file delete __synthesis_is_running__
close [open __synthesis_is_complete__ w]
OPTRACE "synth_1" END { }
